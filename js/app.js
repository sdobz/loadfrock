// Generated by CoffeeScript 1.6.3
(function() {
  var LoadModalCtrl, WEBSOCKET_PORT, app;

  app = angular.module('LoadFrock', ['ui.bootstrap']);

  app.filter('bytes', function() {
    return function(bytes, precision) {
      var number, units;
      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) {
        return '-';
      }
      if (typeof precision === 'undefined') {
        precision = 1;
      }
      units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'];
      number = Math.floor(Math.log(bytes) / Math.log(1024));
      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];
    };
  });

  WEBSOCKET_PORT = 5577;

  app.service('MasterService', function($rootScope) {
    var MasterService, ws;
    ws = new WebSocket('ws://localhost:' + WEBSOCKET_PORT);
    MasterService = {
      connected: false,
      id: null,
      connection_actions: [],
      actions: {},
      register_action: function(action, callback) {
        return this.actions[action] = callback;
      },
      register_connection_action: function(callback) {
        if (!this.connected) {
          return this.connection_actions.push(callback);
        } else {
          return callback();
        }
      },
      run_action: function(action, data) {
        if (this.connected) {
          if (data === void 0) {
            data = {};
          }
          data['action'] = action;
          return ws.send(JSON.stringify(data));
        }
      }
    };
    ws.onopen = function() {
      return $rootScope.$apply(function() {
        var connection_action, _i, _len, _ref, _results;
        MasterService.connected = true;
        MasterService.run_action('connect');
        _ref = MasterService.connection_actions;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          connection_action = _ref[_i];
          _results.push(connection_action());
        }
        return _results;
      });
    };
    ws.onclose = function() {
      return $rootScope.$apply(function() {
        return MasterService.connected = false;
      });
    };
    ws.onmessage = function(msg) {
      var data;
      if (msg) {
        data = JSON.parse(msg.data);
        if (data['action']) {
          return $rootScope.$apply(function() {
            return MasterService.actions[data['action']](data);
          });
        }
      }
    };
    MasterService.register_action('set_id', function(data) {
      console.log('Given id: ', data['id']);
      return MasterService.id = data['id'];
    });
    return MasterService;
  });

  app.controller('FrockBodyCtrl', function($scope, MasterService) {
    return $scope.connection = MasterService;
  });

  app.service('SlaveService', function(MasterService) {
    var SlaveService;
    SlaveService = {
      slaves: [],
      kill_slave: function(id) {
        return MasterService.run_action('quit', {
          id: id
        });
      }
    };
    MasterService.register_connection_action(function() {
      return MasterService.run_action('request_slaves');
    });
    MasterService.register_action('receive_slaves', function(data) {
      return angular.extend(SlaveService.slaves, data['slaves']);
    });
    MasterService.register_action('slave_connected', function(data) {
      if (!SlaveService.slaves[data['id']]) {
        SlaveService.slaves[data['id']] = {};
      }
      return angular.extend(SlaveService.slaves[data['id']], data);
    });
    MasterService.register_action('slave_disconnected', function(data) {
      if (SlaveService.slaves[data['id']]) {
        return delete SlaveService.slaves[data['id']];
      }
    });
    MasterService.register_action('slave_heartbeat', function(data) {
      if (!SlaveService.slaves[data['id']]) {
        SlaveService.slaves[data['id']] = {};
      }
      return angular.extend(SlaveService.slaves[data['id']], data);
    });
    return SlaveService;
  });

  app.controller('SlaveCtrl', function($scope, SlaveService) {
    return $scope.slave_service = SlaveService;
  });

  app.service('Test', function(MasterService) {
    var Test;
    Test = {
      name: '',
      runs: '',
      base: '',
      actions: [],
      send_test_prop: function(prop) {
        console.log(Test);
        return MasterService.run_action('set_test_prop', {
          source: MasterService.id,
          prop: prop,
          value: Test[prop]
        });
      },
      send_action_prop: function(index, prop) {
        return MasterService.run_action('set_action_prop', {
          source: MasterService.id,
          index: index,
          prop: prop,
          value: Test.actions[index][prop]
        });
      },
      add_action: function(index) {
        return MasterService.run_action('add_action', {
          source: MasterService.id,
          index: index
        });
      },
      save_alert_visible: false,
      save: function() {
        return MasterService.run_action('save_test');
      }
    };
    MasterService.register_connection_action(function() {
      return MasterService.run_action('request_test');
    });
    MasterService.register_action('receive_test', function(data) {
      return angular.extend(Test, data['test']);
    });
    MasterService.register_action('set_test_prop', function(data) {
      if (data['source'] !== MasterService.id) {
        return Test[data['prop']] = data['value'];
      }
    });
    MasterService.register_action('set_action_prop', function(data) {
      if (data['source'] !== MasterService.id) {
        return Test.actions[data['index']][data['prop']] = data['value'];
      }
    });
    MasterService.register_action('add_action', function(data) {
      return Test.actions.splice(data['index'], 0, {});
    });
    MasterService.register_action('save_successful', function() {
      return Test.save_alert_visible = true;
    });
    return Test;
  });

  app.controller('TestCtrl', function($scope, Test, $modal) {
    $scope.test = Test;
    $scope.send_test_prop = Test.send_test_prop;
    $scope.send_action_prop = Test.send_action_prop;
    return $scope.open_load_modal = function() {
      return $modal.open({
        templateUrl: 'load_modal.html',
        controller: LoadModalCtrl
      });
    };
  });

  app.service('TestLoader', function(MasterService) {
    var TestLoader;
    TestLoader = {
      available_tests: [],
      load_available: function() {
        return MasterService.run_action('request_available_tests');
      },
      load_test: function(test_name) {
        return MasterService.run_action('load_test', {
          name: test_name
        });
      }
    };
    MasterService.register_action('receive_available_tests', function(data) {
      return TestLoader.available_tests = data['tests'];
    });
    return TestLoader;
  });

  LoadModalCtrl = function($scope, $modalInstance, TestLoader) {
    $scope.test_loader = TestLoader;
    TestLoader.load_available();
    $scope.load = function(test_name) {
      TestLoader.load_test(test_name);
      return $modalInstance.close('');
    };
    return $scope.cancel = function() {
      return $modalInstance.dismiss('');
    };
  };

  app.controller('ActionCtrl', function($scope, ActionServer) {});

}).call(this);
