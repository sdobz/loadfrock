// Generated by CoffeeScript 1.6.3
(function() {
  var WEBSOCKET_PORT, app;

  app = angular.module('LoadFrock', []);

  app.filter('bytes', function() {
    return function(bytes, precision) {
      var number, units;
      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) {
        return '-';
      }
      if (typeof precision === 'undefined') {
        precision = 1;
      }
      units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'];
      number = Math.floor(Math.log(bytes) / Math.log(1024));
      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];
    };
  });

  WEBSOCKET_PORT = 5577;

  app.service('MasterService', function() {
    var MasterService, ws;
    ws = new WebSocket('ws://localhost:' + WEBSOCKET_PORT);
    MasterService = {
      connected: false,
      connection_actions: [],
      actions: {},
      register_action: function(action, callback) {
        return this.actions[action] = callback;
      },
      register_connection_action: function(callback) {
        if (!this.connected) {
          return this.connection_actions.push(callback);
        } else {
          return callback();
        }
      },
      run_action: function(action, data) {
        if (data === void 0) {
          data = {};
        }
        data['action'] = action;
        return ws.send(JSON.stringify(data));
      }
    };
    ws.onopen = function() {
      var connection_action, _i, _len, _ref, _results;
      MasterService.connected = true;
      MasterService.run_action('connect');
      _ref = MasterService.connection_actions;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        connection_action = _ref[_i];
        _results.push(connection_action());
      }
      return _results;
    };
    ws.onmessage = function(msg) {
      var data;
      if (msg) {
        data = JSON.parse(msg.data);
        if (data['action']) {
          return MasterService.actions[data['action']](data);
        }
      }
    };
    return MasterService;
  });

  app.controller('FrockBodyCtrl', function($scope, $rootScope, MasterService) {
    return $scope.status = MasterService.connected;
  });

  app.controller('SlaveCtrl', function($scope, MasterService) {
    $scope.slaves = {};
    $scope.kill_slave = function(id) {
      return MasterService.run_action('quit', {
        id: id
      });
    };
    MasterService.register_connection_action(function() {
      return MasterService.run_action('request_slaves');
    });
    MasterService.register_action('receive_slaves', function(data) {
      return $scope.$apply(function() {
        return angular.extend($scope.slaves, data['slaves']);
      });
    });
    MasterService.register_action('slave_connected', function(data) {
      return $scope.$apply(function() {
        if (!$scope.slaves[data['id']]) {
          $scope.slaves[data['id']] = {};
        }
        return angular.extend($scope.slaves[data['id']], data);
      });
    });
    MasterService.register_action('slave_disconnected', function(data) {
      return $scope.$apply(function() {
        if ($scope.slaves[data['id']]) {
          return delete $scope.slaves[data['id']];
        }
      });
    });
    return MasterService.register_action('slave_heartbeat', function(data) {
      return $scope.$apply(function() {
        if (!$scope.slaves[data['id']]) {
          $scope.slaves[data['id']] = {};
        }
        return angular.extend($scope.slaves[data['id']], data);
      });
    });
  });

}).call(this);
